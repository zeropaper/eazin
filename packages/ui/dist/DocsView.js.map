{"version":3,"sources":["webpack://[name]/./src/core/plugins.propTypes.js","webpack://[name]/./src/plugins/docs/docs.actions.js","webpack://[name]/./src/plugins/docs/DocsView.jsx"],"names":["View","history","PropTypes","shape","push","func","isRequired","match","params","any","getDocs","docs","type","payload","DocsView","this","props","loadDocs","server","ui","variant","description","Object","keys","plugins","map","name","key","React","Component","connect","dispatch","async","queryAPI","headers"],"mappings":"gyBAEO,IAAMA,EAAO,CAClBC,QAASC,IAAUC,MAAM,CACvBC,KAAMF,IAAUG,KAAKC,aAEvBC,MAAOL,IAAUC,MAAM,CACrBK,OAAQN,IAAUO,OAII,EAAH,GAClBT,GAGiB,EAAH,GACdA,I,0ECfQU,G,MAAU,SAACC,GAAD,MAAW,CAChCC,KAAM,cACNC,QAASF,K,kzBCMLG,E,ijBAEqCC,KAAKC,MAApCC,E,EAAAA,S,EAAUN,KAAQO,O,yDACPD,K,gFAGZ,MAMHF,KAAKC,MAJPL,KACEO,EAHG,EAGHA,OACAC,EAJG,EAIHA,GAIJ,OACE,oCACE,gCACE,kBAAC,aAAD,CAAYC,QAAQ,MAApB,kBAGF,iCACE,kBAAC,aAAD,CAAYA,QAAQ,MAApB,WAECF,GACC,oCACE,kBAAC,aAAD,CAAYE,QAAQ,MAApB,UAECF,EAAOG,aAAe,6BAAMH,EAAOG,aAEnCC,OAAOC,KAAKL,EAAOM,SAASC,KAAI,SAACC,GAAD,OAC/B,yBAAKC,IAAKD,GACR,kBAAC,aAAD,CAAYN,QAAQ,MAAMM,GAEzBR,EAAOM,QAAQE,GAAML,aACpB,6BAAMH,EAAOM,QAAQE,GAAML,aAG5BH,EAAOM,QAAQE,GAAMH,MACpB,4BACGD,OAAOC,KAAKL,EAAOM,QAAQE,GAAMH,MAAME,KAAI,SAACE,GAAD,OAC1C,wBAAIA,IAAKA,GACP,gCAASA,GACRT,EAAOM,QAAQE,GAAMH,KAAKI,GAAKN,aAAe,6BAC9CH,EAAOM,QAAQE,GAAMH,KAAKI,GAAKN,aAAe,aAU9DF,GACC,oCACE,kBAAC,aAAD,CAAYC,QAAQ,MAApB,WAECE,OAAOC,KAAKJ,EAAGK,SAASC,KAAI,SAACC,GAAD,OAC3B,yBAAKC,IAAKD,GACR,kBAAC,aAAD,CAAYN,QAAQ,MAAMM,GAC1B,6BAAMP,EAAGK,QAAQE,GAAML,aAAe,gB,8BA5DjCO,IAAMC,WA2FdC,6BAdS,SAAC,GAAD,MAEjB,CACLnB,KAHsB,EACtBA,SAKyB,SAACoB,GAAD,MAAe,CACxCd,SAAU,qCAAAe,OAAA,4DAAYD,EAAZ,KAAqBrB,EAArB,kCAAmCuB,YAAS,YAAa,CACjEC,QAAS,CACP,eAAgB,uBAFV,yHAOGJ,CAA6ChB","file":"DocsView.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const View = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }),\n  match: PropTypes.shape({\n    params: PropTypes.any,\n  }),\n};\n\nexport const HeaderTabs = {\n  ...View,\n};\n\nexport const Drawer = {\n  ...View,\n};\n","// eslint-disable-next-line import/prefer-default-export\nexport const getDocs = (docs) => ({\n  type: 'UPSERT_DOCS',\n  payload: docs,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Typography } from '@material-ui/core';\nimport { View as ViewPropTypes } from '../../core/plugins.propTypes';\nimport { getDocs } from './docs.actions';\nimport queryAPI from '../../core/util/queryAPI';\n\nclass DocsView extends React.Component {\n  async componentDidMount() {\n    const { loadDocs, docs: { server } } = this.props;\n    if (!server) await loadDocs();\n  }\n\n  render() {\n    const {\n      docs: {\n        server,\n        ui,\n      },\n    } = this.props;\n\n    return (\n      <>\n        <header>\n          <Typography variant=\"h2\">Documentation</Typography>\n        </header>\n\n        <section>\n          <Typography variant=\"h3\">Plugins</Typography>\n\n          {server && (\n            <>\n              <Typography variant=\"h4\">Server</Typography>\n\n              {server.description && <div>{server.description}</div>}\n\n              {Object.keys(server.plugins).map((name) => (\n                <div key={name}>\n                  <Typography variant=\"h5\">{name}</Typography>\n\n                  {server.plugins[name].description && (\n                    <div>{server.plugins[name].description}</div>\n                  )}\n\n                  {server.plugins[name].keys && (\n                    <ul>\n                      {Object.keys(server.plugins[name].keys).map((key) => (\n                        <li key={key}>\n                          <strong>{key}</strong>\n                          {server.plugins[name].keys[key].description && <br />}\n                          {server.plugins[name].keys[key].description || ''}\n                        </li>\n                      ))}\n                    </ul>\n                  )}\n                </div>\n              ))}\n            </>\n          )}\n\n          {ui && (\n            <>\n              <Typography variant=\"h4\">Browser</Typography>\n\n              {Object.keys(ui.plugins).map((name) => (\n                <div key={name}>\n                  <Typography variant=\"h5\">{name}</Typography>\n                  <div>{ui.plugins[name].description || ''}</div>\n                </div>\n              ))}\n            </>\n          )}\n        </section>\n      </>\n    );\n  }\n}\n\nDocsView.propTypes = {\n  ...ViewPropTypes,\n  docs: PropTypes.objectOf(PropTypes.object).isRequired,\n  loadDocs: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({\n  docs,\n}) => ({\n  docs,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  loadDocs: async () => dispatch(getDocs(await queryAPI('/api/docs', {\n    headers: {\n      'content-type': 'application/json',\n    },\n  }))),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DocsView);\n"],"sourceRoot":""}