{"version":3,"sources":["webpack://[name]/./src/core/plugins.propTypes.js","webpack://[name]/./src/plugins/activity/ActivityView.jsx","webpack://[name]/./src/plugins/activity/activity.actions.js"],"names":["View","history","PropTypes","shape","push","func","isRequired","match","params","any","ActivityView","this","props","userToken","dispatch","queryAPI","headers","Authorization","loaded","type","payload","activities","variant","JSON","stringify","React","Component","connect","settings"],"mappings":"gyBAEO,IAAMA,EAAO,CAClBC,QAASC,IAAUC,MAAM,CACvBC,KAAMF,IAAUG,KAAKC,aAEvBC,MAAOL,IAAUC,MAAM,CACrBK,OAAQN,IAAUO,OAII,EAAH,GAClBT,GAGiB,EAAH,GACdA,I,o4BCPCU,E,yjBAE8BC,KAAKC,MAA7BC,E,EAAAA,UAAWC,E,EAAAA,S,kCAEEC,YAAS,kBAAmB,CAC/CC,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAF,OAAYJ,O,OAHvBK,E,OAONJ,EClB0C,CAAEK,KAAM,oBAAqBC,QDkB7CF,I,gFAGnB,IACCG,EAAeV,KAAKC,MAApBS,WAER,OACE,oCACE,gCACE,kBAAC,aAAD,CAAYC,QAAQ,MAApB,aAEF,6BAAMC,KAAKC,UAAUH,EAAY,KAAM,U,8BAtBpBI,IAAMC,WA0ClBC,6BARS,SAAC,GAAD,MAGjB,CACLN,WAJsB,EACtBA,WAIAR,UALsB,EAEtBe,SAAYf,aAMCc,CAAyBjB","file":"ActivityView.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const View = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }),\n  match: PropTypes.shape({\n    params: PropTypes.any,\n  }),\n};\n\nexport const HeaderTabs = {\n  ...View,\n};\n\nexport const Drawer = {\n  ...View,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Typography } from '@material-ui/core';\nimport { View as ViewPropTypes } from '../../core/plugins.propTypes';\nimport { upsertActivities } from './activity.actions';\nimport queryAPI from '../../core/util/queryAPI';\n\nclass ActivityView extends React.Component {\n  async componentDidMount() {\n    const { userToken, dispatch } = this.props;\n\n    const loaded = await queryAPI('/api/activities', {\n      headers: {\n        'content-type': 'application/json',\n        Authorization: `Bearer ${userToken}`,\n      },\n    });\n\n    dispatch(upsertActivities(loaded));\n  }\n\n  render() {\n    const { activities } = this.props;\n\n    return (\n      <>\n        <header>\n          <Typography variant=\"h2\">Activity</Typography>\n        </header>\n        <pre>{JSON.stringify(activities, null, 2)}</pre>\n      </>\n    );\n  }\n}\n\nActivityView.propTypes = {\n  ...ViewPropTypes,\n  activities: PropTypes.objectOf(PropTypes.object).isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({\n  activities,\n  settings: { userToken },\n}) => ({\n  activities,\n  userToken,\n});\n\nexport default connect(mapStateToProps)(ActivityView);\n","export const upsertActivity = (payload) => ({ type: 'UPSERT_ACTIVITY', payload });\n\nexport const upsertActivities = (payload) => ({ type: 'UPSERT_ACTIVITIES', payload });\n"],"sourceRoot":""}