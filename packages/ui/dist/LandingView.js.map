{"version":3,"sources":["webpack://[name]/./src/plugins/landing/LandingView.Wrapper.jsx","webpack://[name]/./src/plugins/landing/LandingView.jsx"],"names":["withStyles","theme","root","flexGrow","width","paper","margin","spacing","padding","children","classes","className","cols","Suspense","fallback","StyledLandingView","marginLeft","marginRight","gridList","display","flexWrap","justifyContent","bool","toggle","cellHeight","PluginPoint","wrapIn","Wrapper","name","variant","color","onClick","connect","landing","dispatch","setTimeout","toggleBool"],"mappings":"qKAkCeA,wBA1BA,SAACC,GAAD,MAAY,CACzBC,KAAM,CACJC,SAAU,EACVC,MAAO,OAETC,MAAO,CACLC,OAAQL,EAAMM,QAAQ,GACtBC,QAASP,EAAMM,QAAQ,OAmBZP,EAfC,SAAC,GAAD,IAAGS,EAAH,EAAGA,SAAUC,EAAb,EAAaA,QAAb,OACd,kBAAC,eAAD,CAAcC,UAAWD,EAAQR,KAAMU,KAAM,GAC3C,kBAAC,IAAMC,SAAP,CAAgBC,SAAU,kBAAC,UAAD,OACxB,kBAAC,QAAD,CAAOH,UAAWD,EAAQL,OACvBI,Q,QCvBT,kDAWA,IAwCaM,EAAoBf,sBAxClB,SAACC,GAAD,MAAY,CACzBC,KAAM,CACJc,WAAYf,EAAMM,SAAS,GAC3BU,YAAahB,EAAMM,SAAS,IAE9BW,SAAU,CACRC,QAAS,OACTC,SAAU,OACVC,eAAgB,mBAgCarB,EA5Bb,SAAC,GAAD,IAAGU,EAAH,EAAGA,QAASY,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,OAAlB,OAClB,oCACE,yBAAKZ,UAAWD,EAAQR,MACtB,kBAAC,WAAD,CACEsB,WAAY,IACZZ,KAAM,EACNL,QAAS,EACTI,UAAWD,EAAQQ,UAEnB,kBAACO,EAAA,QAAD,CAAaC,OAAQC,EAASC,KAAK,kBAIvC,6BACE,kBAAC,SAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAASR,GAArD,UAEGD,EAAO,MAAQ,WAsBTU,6BARS,SAAC,GAAD,MAA4B,CAAEV,OAA9B,EAAGW,QAAWX,SAEX,SAACY,GAAD,MAAe,CACxCX,OAAQ,WACNY,YAAW,kBAAMD,EAASE,0BAAe,SAI9BJ,CAA6CjB","file":"LandingView.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridListTile, Paper } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Fallback from '../../components/LoadingFallback';\n\n\nconst styles = (theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '33%',\n  },\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n  },\n});\n\nconst Wrapper = ({ children, classes }) => (\n  <GridListTile className={classes.root} cols={1}>\n    <React.Suspense fallback={<Fallback />}>\n      <Paper className={classes.paper}>\n        {children}\n      </Paper>\n    </React.Suspense>\n  </GridListTile>\n);\n\nWrapper.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default withStyles(styles)(Wrapper);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { GridList, Button } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport PluginPoint from '../../components/PluginPoint';\n\nimport Wrapper from './LandingView.Wrapper';\nimport { toggleBool } from './landing.actions';\n\nconst styles = (theme) => ({\n  root: {\n    marginLeft: theme.spacing(-1),\n    marginRight: theme.spacing(-1),\n  },\n  gridList: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n  },\n});\n\nconst LandingView = ({ classes, bool, toggle }) => (\n  <>\n    <div className={classes.root}>\n      <GridList\n        cellHeight={160}\n        cols={3}\n        spacing={2}\n        className={classes.gridList}\n      >\n        <PluginPoint wrapIn={Wrapper} name=\"LandingView\" />\n      </GridList>\n    </div>\n\n    <div>\n      <Button variant=\"contained\" color=\"primary\" onClick={toggle}>\n        Toggle&nbsp;\n        {bool ? 'yes' : 'no'}\n      </Button>\n    </div>\n  </>\n);\n\nLandingView.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  bool: PropTypes.bool.isRequired,\n  toggle: PropTypes.func.isRequired,\n};\n\nexport const StyledLandingView = withStyles(styles)(LandingView);\n\nconst mapStateToProps = ({ landing: { bool } }) => ({ bool: !!bool });\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggle: () => {\n    setTimeout(() => dispatch(toggleBool()), 500);\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StyledLandingView);\n"],"sourceRoot":""}